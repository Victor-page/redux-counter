{"version":3,"sources":["components/Header.module.css","components/UserProfile.module.css","store/counter-slice.js","components/Counter.js","store/auth-slice.js","components/Header.js","components/Auth.js","components/UserProfile.js","App.js","store/index.js","index.js","components/Auth.module.css","components/Counter.module.css"],"names":["module","exports","counterSlice","createSlice","name","initialState","value","showValue","reducers","increment","state","decrement","increase","action","payload","toggleCounter","counterActions","actions","Counter","dispatch","useDispatch","useSelector","counter","className","classes","onClick","authSlice","isAuthenticated","login","logout","authActions","Header","auth","navigation","href","header","Auth","onSubmit","event","preventDefault","control","htmlFor","type","id","UserProfile","profile","App","store","configureStore","reducer","counterReducer","authReducer","ReactDOM","render","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,QAAU,+B,6GCGtBC,EAAeC,YAAY,CAC/BC,KAAM,UACNC,aAJ0B,CAAEC,MAAO,EAAGC,WAAW,GAKjDC,SAAU,CACRC,UADQ,SACEC,GACRA,EAAMJ,SAERK,UAJQ,SAIED,GACRA,EAAMJ,SAERM,SAPQ,SAOCF,EAAOG,GACdH,EAAMJ,MAAQI,EAAMJ,MAAQO,EAAOC,SAErCC,cAVQ,SAUML,GACZA,EAAMH,WAAaG,EAAMH,cAKlBS,EAAiBd,EAAae,QAE5Bf,IAAf,Q,uBCYegB,EA3BC,WACd,IAAMC,EAAWC,cACXd,EAAQe,aAAY,SAACX,GAAD,OAAWA,EAAMY,QAAQhB,SAC7CC,EAAYc,aAAY,SAACX,GAAD,OAAWA,EAAMY,QAAQf,aAUvD,OACE,uBAAMgB,UAAWC,IAAQF,QAAzB,UACE,+CACCf,GAAa,sBAAKgB,UAAWC,IAAQlB,MAAxB,gBAAmCA,EAAnC,SACd,gCACE,wBAAQmB,QAbW,kBAAMN,EAASH,EAAeP,cAajD,uBACA,wBAAQgB,QAZU,kBAAMN,EAASH,EAAeJ,SAAS,KAYzD,2BACA,wBAAQa,QAXW,kBAAMN,EAASH,EAAeL,cAWjD,0BAEF,wBAAQc,QAXiB,kBAAMN,EAASH,EAAeD,kBAWvD,gC,iBC1BAW,EAAYvB,YAAY,CAC5BC,KAAM,iBACNC,aANkC,CAClCsB,iBAAiB,GAMjBnB,SAAU,CACRoB,MADQ,SACFlB,GACJA,EAAMiB,iBAAkB,GAE1BE,OAJQ,SAIDnB,GACLA,EAAMiB,iBAAkB,MAKjBG,EAAcJ,EAAUT,QAEtBS,IAAf,QCceK,EA9BA,WACb,IAAMZ,EAAWC,cACXO,EAAkBN,aAAY,SAACX,GAAD,OAAWA,EAAMsB,KAAKL,mBAIpDM,EACJ,8BACE,+BACE,6BACE,mBAAGC,KAAK,IAAR,2BAEF,6BACE,mBAAGA,KAAK,IAAR,wBAEF,6BACE,wBAAQT,QAZM,kBAAMN,EAASW,EAAYD,WAYzC,2BAMR,OACE,yBAAQN,UAAWC,IAAQW,OAA3B,UACE,4CACCR,GAAmBM,M,gBCEXG,EA3BF,WACX,IAAMjB,EAAWC,cAOjB,OACE,sBAAMG,UAAWC,IAAQQ,KAAzB,SACE,kCACE,uBAAMK,SATS,SAACC,GACpBA,EAAMC,iBAENpB,EAASW,EAAYF,UAMjB,UACE,sBAAKL,UAAWC,IAAQgB,QAAxB,UACE,uBAAOC,QAAQ,QAAf,mBACA,uBAAOC,KAAK,QAAQC,GAAG,aAEzB,sBAAKpB,UAAWC,IAAQgB,QAAxB,UACE,uBAAOC,QAAQ,WAAf,sBACA,uBAAOC,KAAK,WAAWC,GAAG,gBAE5B,mD,iBCfKC,EARK,WAClB,OACE,sBAAMrB,UAAWC,IAAQqB,QAAzB,SACE,oDCcSC,MAXf,WACE,IAAMnB,EAAkBN,aAAY,SAACX,GAAD,OAAWA,EAAMsB,KAAKL,mBAC1D,OACE,eAAC,WAAD,WACE,cAAC,EAAD,IACCA,EAAkB,cAAC,EAAD,IAAkB,cAAC,EAAD,IACrC,cAAC,EAAD,QCLSoB,EAJDC,YAAe,CAC3BC,QAAS,CAAE3B,QAAS4B,EAAgBlB,KAAMmB,KCE5CC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,U,kBCX1BvD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,wB,kBCAtDD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,0B","file":"static/js/main.9eaece75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ZwRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__29lLq\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialCounterState = { value: 0, showValue: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: initialCounterState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.value++;\r\n    },\r\n    decrement(state) {\r\n      state.value--;\r\n    },\r\n    increase(state, action) {\r\n      state.value = state.value + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showValue = !state.showValue;\r\n    },\r\n  },\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default counterSlice.reducer;\r\n","// import { Component } from 'react';\nimport {\n  useSelector,\n  useDispatch,\n  // connect,\n} from 'react-redux';\n\nimport { counterActions } from '../store/counter-slice';\nimport classes from './Counter.module.css';\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector((state) => state.counter.value);\n  const showValue = useSelector((state) => state.counter.showValue);\n\n  const incrementHandler = () => dispatch(counterActions.increment());\n\n  const increaseHandler = () => dispatch(counterActions.increase(5)); // { type: SOME_UNIQUE_IDENTIFIER, payload: 5 }\n\n  const decrementHandler = () => dispatch(counterActions.decrement());\n\n  const toggleCounterHandler = () => dispatch(counterActions.toggleCounter());\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {showValue && <div className={classes.value}>-- {value} --</div>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increase by 5</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n\n// class Counter extends Component {\n//   incrementHandler() {\n//     this.props.increment();\n//   }\n\n//   decrementHandler() {\n//     this.props.decrement();\n//   }\n\n//   toggleCounterHandler() {}\n\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>-- {this.props.value} --</div>\n//         <div>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n\n// const mapStateToProps = (state) => ({ value: state.value });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   increment: () => dispatch({ type: 'increment' }),\n//   decrement: () => dispatch({ type: 'decrement' }),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst inititalAuthenticationState = {\r\n  isAuthenticated: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'authentication',\r\n  initialState: inititalAuthenticationState,\r\n  reducers: {\r\n    login(state) {\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout(state) {\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport classes from './Header.module.css';\nimport { authActions } from '../store/auth-slice';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n\n  const logoutHandler = () => dispatch(authActions.logout());\n\n  const navigation = (\n    <nav>\n      <ul>\n        <li>\n          <a href=\"/\">My Products</a>\n        </li>\n        <li>\n          <a href=\"/\">My Sales</a>\n        </li>\n        <li>\n          <button onClick={logoutHandler}>Logout</button>\n        </li>\n      </ul>\n    </nav>\n  );\n\n  return (\n    <header className={classes.header}>\n      <h1>Redux Auth</h1>\n      {isAuthenticated && navigation}\n    </header>\n  );\n};\n\nexport default Header;\n","import { useDispatch } from 'react-redux';\n\nimport classes from './Auth.module.css';\nimport { authActions } from '../store/auth-slice';\n\nconst Auth = () => {\n  const dispatch = useDispatch();\n  const loginHandler = (event) => {\n    event.preventDefault();\n\n    dispatch(authActions.login());\n  };\n\n  return (\n    <main className={classes.auth}>\n      <section>\n        <form onSubmit={loginHandler}>\n          <div className={classes.control}>\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" />\n          </div>\n          <button>Login</button>\n        </form>\n      </section>\n    </main>\n  );\n};\n\nexport default Auth;\n","import classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <main className={classes.profile}>\n      <h2>My User Profile</h2>\n    </main>\n  );\n};\n\nexport default UserProfile;\n","import { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Counter from './components/Counter';\nimport Header from './components/Header';\nimport Auth from './components/Auth';\nimport UserProfile from './components/UserProfile';\n\nfunction App() {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  return (\n    <Fragment>\n      <Header />\n      {isAuthenticated ? <UserProfile /> : <Auth />}\n      <Counter />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport counterReducer from './counter-slice';\r\nimport authReducer from './auth-slice';\r\n\r\nconst store = configureStore({\r\n  reducer: { counter: counterReducer, auth: authReducer },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store/index';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__4adj_\",\"control\":\"Auth_control__QHdOY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__2wnYk\",\"value\":\"Counter_value__CGNGb\"};"],"sourceRoot":""}